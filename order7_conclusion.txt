
# Search a set (note that a set is sorted!) of 56-element subsets of [1..280] for a set of 5 of these subsets which form a partition of [1..280]
# ----------------------------------------------------------------------------------------------------------------------------------------------

krasse_suche := function(input)
local unital, unitale, i, x, raus, pos, poszwei, posdrei, posvier, huete, huetezwei, huetedrei, huetevier, huetefuenf, klzwei, kldrei, klvier;

	unitale:=[];
	
	pos:=1;
	huete:=StructuralCopy(input);
	raus:=[];
	
	while huete[1][1]=1 do

		unital:=[huete[1]];
		for i in [1..56] do 
			for x in huete do if x[i] in unital[1] then Add(raus,x); fi; od;
			huete:=Difference(huete,raus);
			raus:=[];
		od;
		
		huetezwei:=StructuralCopy(huete);
		if huetezwei<>[] then
			klzwei:=StructuralCopy(huetezwei[1][1]);
			poszwei:=1;
		
			while huetezwei[1][1]=klzwei and Length(huetezwei) > 3 do
			
				Add(unital,huetezwei[1]);
				for i in [1..56] do 
					for x in huetezwei do if x[i] in unital[2] then Add(raus,x); fi; od;
					huetezwei:=Difference(huetezwei,raus);
					raus:=[];
				od;
			
				huetedrei:=StructuralCopy(huetezwei);
				if huetedrei<>[] then
					kldrei:=StructuralCopy(huetedrei[1][1]);
					posdrei:=1;
			
					while huetedrei[1][1]=kldrei and Length(huetedrei) > 2 do
			
						Add(unital,huetedrei[1]);
						for i in [1..56] do 
							for x in huetedrei do if x[i] in unital[3] then Add(raus,x); fi; od;
							huetedrei:=Difference(huetedrei,raus);
							raus:=[];
						od;
				
						huetevier:=StructuralCopy(huetedrei);
						if huetevier<>[] then
							klvier:=StructuralCopy(huetevier[1][1]);
							posvier:=1;
						
							while huetevier[1][1]=klvier and Length(huetevier) > 1 do
						
								Add(unital,huetevier[1]);
								for i in [1..56] do
									for x in huetevier do if x[i] in unital[4] then Add(raus,x); fi; od;
									huetevier:=Difference(huetevier,raus);
									raus:=[];
								od;
						
								huetefuenf:=StructuralCopy(huetevier);
								if Length(huetefuenf)>=1 then
									Add(unital,huetefuenf[1]);
									# A partition is found
									Add(unitale,StructuralCopy(unital));
									Remove(unital);
								fi;

								Remove(unital);
								posvier:=posvier+1;
								huetevier:=StructuralCopy(huetedrei{[posvier..Length(huetedrei)]});						
						
							od;
						fi;
						
						Remove(unital);
						posdrei:=posdrei+1;
						huetedrei:=StructuralCopy(huetezwei{[posdrei..Length(huetezwei)]});					
		
					od;
				fi;
			
				Remove(unital);
				poszwei:=poszwei+1;
				huetezwei:=StructuralCopy(huete{[poszwei..Length(huete)]});
		
			od;
		fi;
		
		Remove(unital);
		pos:=pos+1;
		huete:=StructuralCopy(input{[pos..Length(input)]});

	od;
	
	return(unitale);
	
end;


# The result
# ==========
#
# The result is the same for cyclic S and each of the groups of automorphisms U, F and V:
#
# [ [ 1, 5, 8, 14, 18, 22, 25, 31, 36, 38, 41, 42, 53, 57, 62, 63, 74, 77, 85, 86, 90, 92, 106, 107, 108, 112, 157, 
#     160, 162, 163, 173, 174, 183, 184, 191, 194, 206, 207, 211, 215, 217, 220, 226, 227, 230, 231, 235, 237, 243, 
#     246, 248, 251, 259, 265, 267, 276 ],
#	[ 2, 3, 7, 13, 19, 20, 24, 30, 43, 46, 48, 51, 61, 64, 66, 69, 72, 75, 78, 81, 89, 93, 95, 96, 97, 105, 110, 113, 
#	  117, 120, 129, 132, 133, 137, 147, 149, 150, 152, 164, 180, 200, 203, 216, 219, 234, 239, 241, 244, 247, 249, 
#	  254, 255, 264, 268, 273, 274 ], 
#   [ 4, 21, 40, 49, 50, 55, 65, 70, 73, 76, 79, 82, 84, 87, 98, 100, 102, 103, 114, 123, 125, 128, 130, 139, 142, 145, 
#	  148, 165, 166, 170, 172, 177, 178, 181, 182, 186, 188, 192, 193, 197, 208, 209, 214, 223, 224, 229, 242, 245, 
#	  253, 258, 262, 263, 270, 272, 277, 280 ],
#	[ 6, 11, 12, 17, 23, 28, 29, 34, 35, 39, 44, 45, 54, 56, 59, 60, 88, 104, 116, 119, 122, 124, 127, 131, 134, 141, 
#	  143, 144, 146, 153, 155, 158, 161, 168, 171, 179, 187, 189, 199, 202, 210, 212, 228, 232, 250, 252, 256, 257, 260, 
#	  261, 266, 269, 271, 275, 278, 279 ], 
#   [ 9, 10, 15, 16, 26, 27, 32, 33, 37, 47, 52, 58, 67, 68, 71, 80, 83, 91, 94, 99, 101, 109, 111, 115, 118, 121, 126, 
#	  135, 136, 138, 140, 151, 154, 156, 159, 167, 169, 175, 176, 185, 190, 195, 196, 198, 201, 204, 205, 213, 218, 
#	  221, 222, 225, 233, 236, 238, 240 ] ]
#
# There is hence only one isomorphism type of affine SL(2,7)-unitals with cyclic S and the given automorphism groups.
#
#
# For S quaternion and the group of automorphisms U:
#
# 	krasse_suche(Union(hutpositionena,hutpositionenb))=[]
#




